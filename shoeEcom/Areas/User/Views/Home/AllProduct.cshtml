@model PaginatedList<Product>

@{
    // Get the current URL from the HttpContext
    var currentUrl = $"AllProduct{Context.Request.QueryString}&pageNumber=";
    var url = Context.Request.QueryString.ToString();

    string[] arr = currentUrl.Split("&");

    if (string.IsNullOrEmpty(url))
    {
        currentUrl = $"AllProduct?pageNumber=";
    }
}

<style>
    .active > span{
        color: tomato !important;
    }
</style>

<main id="MainContent" class="content-for-layout">
    <div class="collection mt-100">
        <div class="container">
            <div class="row flex-row-reverse">
                <!-- product area start -->
                <div class="col-lg-9 col-md-12 col-12">
                    <div class="filter-sort-wrapper d-flex justify-content-between flex-wrap">
                        <div class="collection-title-wrap d-flex align-items-end">
                            <h2 class="collection-title heading_24 mb-0">All products</h2>
                            <p class="collection-counter text_16 mb-0 ms-2">(@Model.TotalItem items)</p>
                        </div>
                        <div class="filter-sorting">
                            
                        </div>
                    </div>
                    <div class="collection-product-container">
                        <div class="row">                    
                            
                            @foreach (var item in Model.Items)
                            {
                                <div class="col-lg-4 col-md-6 col-6" data-aos="fade-up" data-aos-duration="700">
                                    <div class="product-card">
                                        <div class="product-card-img">
                                            <a class="hover-switch" asp-area="User" asp-controller="Home" asp-action="Details" asp-route-id="@item.Id">
                                                <img class="secondary-img" src="@item.ProductImages[0].ImageUrl"
                                                     alt="product-img">
                                                <img class="primary-img" src="@item.ProductImages[1].ImageUrl"
                                                     alt="product-img">
                                            </a>
                                            
                                        </div>
                                        <div class="product-card-details">
                                            <h3 class="product-card-title">
                                                <a asp-area="User" asp-controller="Home" asp-action="Details" asp-route-id="@item.Id">@item.Title</a>
                                            </h3>
                                            <div class="product-card-price">
                                                <span class="card-price-regular">@item.DiscountPrice.ToString("c")</span>
                                                <span class="card-price-compare text-decoration-line-through">@item.Price.ToString("c")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }   
                        </div>
                    </div>
                    <div class="pagination justify-content-center mt-100">
                        <nav>
                            <ul class="pagination m-0 d-flex align-items-center">
                                <li class="item @(Model.PageNumber == 1 ? "disabled":"")" >
                                    <span style="cursor: @(Model.PageNumber > 1 ? "pointer" : "")" id="previousPage" class="link">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                             stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                             class="icon icon-left">
                                            <polyline points="15 18 9 12 15 6"></polyline>
                                        </svg>
                                    </span>
                                </li>

                                @for (int i = 1; i<= Model.TotalPages; i++)
                                {
                                    <li class="item @(Model.PageNumber == i ? "active" : "")"><span style="cursor: @(Model.PageNumber == i ? "" : "pointer")" class="link pagenation" value="@i">@i</span></li>
                                }                             
                                
                                <li class="item">
                                    <span class="link" style="cursor: @(Model.HasNextPage ? "pointer" : "")" id="@(Model.HasNextPage ? "nextPage" : "")">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                             stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                             class="icon icon-right">
                                            <polyline points="9 18 15 12 9 6"></polyline>
                                        </svg>
                                    </span>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
                <!-- product area end -->
                <!-- sidebar start -->
                <div class="col-lg-3 col-md-12 col-12">
                    <div class="collection-filter filter-drawer">
                        <div class="filter-widget d-lg-none d-flex align-items-center justify-content-between">
                            <h4 class="heading_24">
                                Filter By</h4>
                                <button type="button" class="btn-close text-reset filter-drawer-trigger d-lg-none"></button>
                        </div>

                        <div class="filter-widget d-lg-none">
                            <div class="filter-header faq-heading heading_18 d-flex align-items-center justify-content-between border-bottom"
                                 data-bs-toggle="collapse" data-bs-target="#filter-mobile-sort">
                                <span>
                                    <span class="sorting-title me-2">Sort by:</span>
                                    <span class="active-sorting">Featured</span>
                                </span>
                                <span class="faq-heading-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                         viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round" class="icon icon-down">
                                        <polyline points="6 9 12 15 18 9"></polyline>
                                    </svg>
                                </span>
                            </div>
                            <div id="filter-mobile-sort" class="accordion-collapse collapse show">
                                <ul class="sorting-lists-mobile list-unstyled m-0">
                                    <li><a href="#" class="text_14">Featured</a></li>
                                    <li><a href="#" class="text_14">Price, low to high</a></li>
                                    <li><a href="#" class="text_14">Price, high to low</a></li>
                                </ul>
                            </div>
                        </div>
                        <form asp-controller="Home" asp-action="AllProduct" id="filterForm">
                            <div class="filter-widget">
                                <div class="filter-widget">
                                <div class="filter-header faq-heading heading_18 d-flex align-items-center justify-content-between border-bottom"
                                     data-bs-toggle="collapse" data-bs-target="#filter-availability">
                                        Featured
                                    <span class="faq-heading-icon">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                             viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round" class="icon icon-down">
                                            <polyline points="6 9 12 15 18 9"></polyline>
                                        </svg>
                                    </span>
                                </div>
                                <div id="filter-availability" class="accordion-collapse collapse show">
                                    <ul class="filter-lists list-unstyled mb-0">
                                        <li class="filter-item">
                                            <label class="filter-label">
                                                <input value="asc" class="piceSelect" type="checkbox" />
                                                <span class="filter-checkbox rounded me-2"></span>
                                                <span class="filter-text">Price (Low To High)</span>
                                            </label>
                                        </li>
                                        <li class="filter-item">
                                            <label class="filter-label">
                                                <input value="desc" class="piceSelect" type="checkbox" />
                                                <span class="filter-checkbox rounded me-2"></span>
                                                    Price (High To Low)
                                            </label>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="filter-header faq-heading heading_18 d-flex align-items-center justify-content-between border-bottom"
                                 data-bs-toggle="collapse" data-bs-target="#filter-collection">
                                Categories
                                <span class="faq-heading-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                         viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round" class="icon icon-down">
                                        <polyline points="6 9 12 15 18 9"></polyline>
                                    </svg>
                                </span>
                            </div>
                            <div id="filter-collection" class="accordion-collapse collapse show">
                                <ul class="filter-lists list-unstyled mb-0">
                                        @foreach (var item in ViewBag.Category)
                                        {
                                            <li class="filter-item">
                                                <label class="filter-label">
                                                    <input value="@item.Id" class="categoryCheck" type="checkbox" />
                                                    <span class="filter-checkbox rounded me-2"></span>
                                                    <span class="filter-text">@item.Name</span>
                                                </label>
                                            </li>
                                        }
                                </ul>
                            </div>
                        </div>
                        <div class="filter-widget">
                            <div class="filter-header faq-heading heading_18 d-flex align-items-center justify-content-between border-bottom"
                                 data-bs-toggle="collapse" data-bs-target="#filter-availability">
                                Gender
                                <span class="faq-heading-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                         viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round" class="icon icon-down">
                                        <polyline points="6 9 12 15 18 9"></polyline>
                                    </svg>
                                </span>
                            </div>
                            <div id="filter-availability" class="accordion-collapse collapse show">
                                <ul class="filter-lists list-unstyled mb-0">
                                    <li class="filter-item">
                                        <label class="filter-label">
                                            <input value="men" class="genderSelect" type="checkbox" />
                                            <span class="filter-checkbox rounded me-2"></span>
                                            <span class="filter-text">Men</span>
                                        </label>
                                    </li>
                                    <li class="filter-item">
                                        <label class="filter-label">
                                            <input value="women" class="genderSelect" type="checkbox" />
                                            <span class="filter-checkbox rounded me-2"></span>
                                            Women
                                        </label>
                                    </li>
                                    <li class="filter-item">
                                        <label class="filter-label">
                                            <input value="kid" class="genderSelect" type="checkbox" />
                                            <span class="filter-checkbox rounded me-2"></span>
                                            Kids
                                        </label>
                                    </li>
                                </ul>
                            </div>
                        </div>                  
                        </form>
                        <div class="filter-widget">
                            <a href="product.html">
                                <img class="rounded" src="~/img/banner/shoe-1.jpg" alt="img">
                            </a>
                        </div>
                    </div>
                </div>
                <!-- sidebar end -->
            </div>
        </div>
    </div>
</main>

@section Scripts{
    <script>
        var checkboxes = document.querySelectorAll('.categoryCheck');
        var genderCheckboxes = document.querySelectorAll('.genderSelect');
        var priceCheckboxes = document.querySelectorAll('.piceSelect');
        var pagenation = document.querySelectorAll(".pagenation");

        var checkedValues = [];
        var gender = [];
        var sort = "";
        var page = 0;

        const urlParams = new URLSearchParams(window.location.search);
        sort = urlParams.get('sort');
        page = urlParams.get('pageNumber');
        page = Number(page);
        const allSelectedCategories = urlParams.getAll('selectedCategories');
        const allSelectedGender = urlParams.getAll('gender');


        if (allSelectedCategories) {
            allSelectedCategories.forEach((e) => {
                checkedValues.push(e);
            })
        }

        if (allSelectedGender) {
            allSelectedGender.forEach((e) => {
                gender.push(e);
            })
        }

        setTimeout(() => {
            if (checkedValues.length > 0) {
                checkboxes.forEach((checkbox) => {
                     if (checkedValues.includes(checkbox.value)) {
                        checkbox.checked = true;
                     }
                });
            }

            if (gender.length > 0) {
                genderCheckboxes.forEach((checkbox) => {
                    if (gender.includes(checkbox.value)) {
                        checkbox.checked = true;
                    }
                });
            }

            if (sort !== "") {
                priceCheckboxes.forEach((checkbox) => {
                    if (sort == checkbox.value) {
                        checkbox.checked = true;
                    } else {
                        checkbox.checked = false;
                    }
                });
            }

        },10)

        

        function handleCheckboxChange(event) {
            var checkbox = event.target;
            var value = checkbox.value;

            if (checkbox.checked) {
                checkedValues.push(value);
            } else {
                checkedValues = checkedValues.filter(function (item) {
                    return item !== value;
                });
            }

            SetAttribute();
        }

        

        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', handleCheckboxChange);
        });



        function handleCheckboxChangeGender(event) {
            var checkbox = event.target;
            var value = checkbox.value;

            if (checkbox.checked) {
                gender.push(value);
            } else {
                gender = gender.filter(function (item) {
                    return item !== value;
                });
            }

            SetAttribute();
        }

        genderCheckboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', handleCheckboxChangeGender);
        });

        function handleCheckboxSort(event) {
            var checkbox = event.target;
            var value = checkbox.value;

            if (checkbox.checked) {
                sort = value;
            } else {
                sort = "";
            }
            console.log(sort);
            SetAttribute(); 
        }

        priceCheckboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', handleCheckboxSort);
        });


        function changePage(evant) {
            let value = event.target.getAttribute("value");
            page = value;
            SetAttribute();
        }

        document.querySelector("#previousPage").addEventListener("click", () => {
            if (Number(page) > 1) {
                page = page - 1;
                SetAttribute();
            }
        })

        let nextPage = document.querySelector("#nextPage");
        if (nextPage) {
            nextPage.addEventListener("click", () => {
                page = page + 1;
                SetAttribute();
            });
        }


        pagenation.forEach(function (checkbox) {
            checkbox.addEventListener('click', changePage);
        });

        function SetAttribute() {
            var formAction = $("#filterForm").attr("action");
            if (checkedValues.length == 0 && gender.length == 0 && sort == "") {
                var newAction = formAction + "";
            }
            else {
                var newAction = formAction + "?";
                checkedValues.forEach((e) => {
                    newAction = newAction +  "selectedCategories=" + e + "&";
                })
                gender.forEach((e) => {
                    newAction = newAction + "gender=" + e + "&";
                })
                if (sort) {
                    newAction = newAction + "sort=" + sort + "&";
                }
                if (page) {
                    newAction = newAction + "pageNumber=" + page + "&"; 
                }
                newAction = newAction.slice(0, -1);
            }
            $("#filterForm").attr("action", newAction);
            document.getElementById("filterForm").submit();
        }

    </script>
}